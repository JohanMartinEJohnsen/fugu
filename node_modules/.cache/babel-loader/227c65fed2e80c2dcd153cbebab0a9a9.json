{"ast":null,"code":"var _jsxFileName = \"/Users/Johan/react-tictactoe/src/App.js\";\nimport React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport Board from \"./Board\";\nimport PubNubReact from \"pubnub-react\";\nimport Swal from \"sweetalert2\";\nimport shortid from \"shortid\";\nimport \"./Game.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPressCreate = e => {\n      // Create a random name for the channel\n      this.roomId = shortid.generate().substring(0, 5);\n      this.lobbyChannel = \"tictactoelobby--\" + this.roomId;\n      this.pubnub.subscribe({\n        channels: [this.lobbyChannel],\n        withPresence: true\n      }); // Open the modal\n\n      Swal.fire({\n        position: \"top\",\n        allowOutsideClick: false,\n        title: \"Share this room ID with your friend\",\n        text: this.roomId,\n        width: 275,\n        padding: \"0.7em\",\n        // Custom CSS\n        customClass: {\n          heightAuto: false,\n          title: \"title-class\",\n          popup: \"popup-class\",\n          confirmButton: \"button-class\"\n        }\n      });\n      this.setState({\n        piece: \"X\",\n        isRoomCreator: true,\n        isDisabled: true,\n        // Disable the 'Create' button\n        myTurn: true // Room creator makes the 1st move\n\n      });\n    };\n\n    this.onPressJoin = e => {\n      Swal.fire({\n        position: \"top\",\n        input: \"text\",\n        allowOutsideClick: false,\n        inputPlaceholder: \"Enter the room id\",\n        showCancelButton: true,\n        confirmButtonColor: \"rgb(208,33,41)\",\n        confirmButtonText: \"OK\",\n        width: 275,\n        padding: \"0.7em\",\n        customClass: {\n          heightAuto: false,\n          popup: \"popup-class\",\n          confirmButton: \"join-button-class \",\n          cancelButton: \"join-button-class\"\n        }\n      }).then(result => {\n        // Check if the user typed a value in the input field\n        if (result.value) {\n          this.joinRoom(result.value);\n        }\n      });\n    };\n\n    this.joinRoom = value => {\n      this.roomId = value;\n      this.lobbyChannel = \"tictactoelobby--\" + this.roomId; // Check the number of people in the channel\n\n      this.pubnub.hereNow({\n        channels: [this.lobbyChannel]\n      }).then(response => {\n        if (response.totalOccupancy < 2) {\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          this.setState({\n            piece: \"O\"\n          });\n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true\n            },\n            channel: this.lobbyChannel\n          });\n        } else {\n          // Game in progress\n          Swal.fire({\n            position: \"top\",\n            allowOutsideClick: false,\n            title: \"Error\",\n            text: \"Game in progress. Try another room.\",\n            width: 275,\n            padding: \"0.7em\",\n            customClass: {\n              heightAuto: false,\n              title: \"title-class\",\n              popup: \"popup-class\",\n              confirmButton: \"button-class\"\n            }\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        piece: \"\",\n        isPlaying: false,\n        isRoomCreator: false,\n        isDisabled: false,\n        myTurn: false\n      });\n      this.lobbyChannel = null;\n      this.gameChannel = null;\n      this.roomId = null;\n      this.pubnub.unsubscribe({\n        channels: [this.lobbyChannel, this.gameChannel]\n      });\n    };\n\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-fae6dfb9-0fd1-4b5e-a0f3-a3d4511085e9\",\n      subscribeKey: \"sub-c-0b5e637c-3675-11eb-b6eb-96faa39b9528\"\n    });\n    this.state = {\n      piece: \"\",\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n    this.pubnub.init(this);\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, msg => {\n        // Start the game once an opponent joins the channel\n        if (msg.message.notRoomCreator) {\n          // Create a different channel for the game\n          this.gameChannel = \"tictactoegame--\" + this.roomId;\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n          this.setState({\n            isPlaying: true\n          }); // Close the modals if they are opened\n\n          Swal.close();\n        }\n      });\n    }\n  } // Create a room channel\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"React Tic Tac Toe\")), !this.state.isPlaying && React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: 0,\n      onClick: index => null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"create-button \",\n      disabled: this.state.isDisabled,\n      onClick: e => this.onPressCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \" \", \"Create\"), React.createElement(\"button\", {\n      className: \"join-button\",\n      onClick: e => this.onPressJoin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \" \", \"Join\")))), this.state.isPlaying && React.createElement(Game, {\n      pubnub: this.pubnub,\n      gameChannel: this.gameChannel,\n      piece: this.state.piece,\n      isRoomCreator: this.state.isRoomCreator,\n      myTurn: this.state.myTurn,\n      xUsername: this.state.xUsername,\n      oUsername: this.state.oUsername,\n      endGame: this.endGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Johan/react-tictactoe/src/App.js"],"names":["React","Component","Game","Board","PubNubReact","Swal","shortid","App","constructor","props","onPressCreate","e","roomId","generate","substring","lobbyChannel","pubnub","subscribe","channels","withPresence","fire","position","allowOutsideClick","title","text","width","padding","customClass","heightAuto","popup","confirmButton","setState","piece","isRoomCreator","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","cancelButton","then","result","value","joinRoom","hereNow","response","totalOccupancy","publish","message","notRoomCreator","channel","catch","error","console","log","endGame","isPlaying","gameChannel","unsubscribe","publishKey","subscribeKey","state","init","componentWillUnmount","componentDidUpdate","getMessage","msg","close","render","index","xUsername","oUsername"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport Board from \"./Board\";\nimport PubNubReact from \"pubnub-react\";\nimport Swal from \"sweetalert2\";\nimport shortid from \"shortid\";\nimport \"./Game.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-fae6dfb9-0fd1-4b5e-a0f3-a3d4511085e9\",\n      subscribeKey: \"sub-c-0b5e637c-3675-11eb-b6eb-96faa39b9528\"\n    });\n\n    this.state = {\n      piece: \"\",\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n    this.pubnub.init(this);\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, msg => {\n        // Start the game once an opponent joins the channel\n        if (msg.message.notRoomCreator) {\n          // Create a different channel for the game\n          this.gameChannel = \"tictactoegame--\" + this.roomId;\n\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n\n          this.setState({\n            isPlaying: true\n          });\n\n          // Close the modals if they are opened\n          Swal.close();\n        }\n      });\n    }\n  }\n\n  // Create a room channel\n  onPressCreate = e => {\n    // Create a random name for the channel\n    this.roomId = shortid.generate().substring(0, 5);\n    this.lobbyChannel = \"tictactoelobby--\" + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n    // Open the modal\n    Swal.fire({\n      position: \"top\",\n      allowOutsideClick: false,\n      title: \"Share this room ID with your friend\",\n      text: this.roomId,\n      width: 275,\n      padding: \"0.7em\",\n      // Custom CSS\n      customClass: {\n        heightAuto: false,\n        title: \"title-class\",\n        popup: \"popup-class\",\n        confirmButton: \"button-class\"\n      }\n    });\n\n    this.setState({\n      piece: \"X\",\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true // Room creator makes the 1st move\n    });\n  };\n\n  // The 'Join' button was pressed\n  onPressJoin = e => {\n    Swal.fire({\n      position: \"top\",\n      input: \"text\",\n      allowOutsideClick: false,\n      inputPlaceholder: \"Enter the room id\",\n      showCancelButton: true,\n      confirmButtonColor: \"rgb(208,33,41)\",\n      confirmButtonText: \"OK\",\n      width: 275,\n      padding: \"0.7em\",\n      customClass: {\n        heightAuto: false,\n        popup: \"popup-class\",\n        confirmButton: \"join-button-class \",\n        cancelButton: \"join-button-class\"\n      }\n    }).then(result => {\n      // Check if the user typed a value in the input field\n      if (result.value) {\n        this.joinRoom(result.value);\n      }\n    });\n  };\n\n  // Join a room channel\n  joinRoom = value => {\n    this.roomId = value;\n    this.lobbyChannel = \"tictactoelobby--\" + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub\n      .hereNow({\n        channels: [this.lobbyChannel]\n      })\n      .then(response => {\n        if (response.totalOccupancy < 2) {\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n\n          this.setState({\n            piece: \"O\"\n          });\n\n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true\n            },\n            channel: this.lobbyChannel\n          });\n        } else {\n          // Game in progress\n          Swal.fire({\n            position: \"top\",\n            allowOutsideClick: false,\n            title: \"Error\",\n            text: \"Game in progress. Try another room.\",\n            width: 275,\n            padding: \"0.7em\",\n            customClass: {\n              heightAuto: false,\n              title: \"title-class\",\n              popup: \"popup-class\",\n              confirmButton: \"button-class\"\n            }\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: \"\",\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"title\">\n          <p>React Tic Tac Toe</p>\n        </div>\n\n        {!this.state.isPlaying && (\n          <div className=\"game\">\n            <div className=\"board\">\n              <Board squares={0} onClick={index => null} />\n\n              <div className=\"button-container\">\n                <button\n                  className=\"create-button \"\n                  disabled={this.state.isDisabled}\n                  onClick={e => this.onPressCreate()}\n                >\n                  {\" \"}\n                  Create\n                </button>\n                <button\n                  className=\"join-button\"\n                  onClick={e => this.onPressJoin()}\n                >\n                  {\" \"}\n                  Join\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {this.state.isPlaying && (\n          <Game\n            pubnub={this.pubnub}\n            gameChannel={this.gameChannel}\n            piece={this.state.piece}\n            isRoomCreator={this.state.isRoomCreator}\n            myTurn={this.state.myTurn}\n            xUsername={this.state.xUsername}\n            oUsername={this.state.oUsername}\n            endGame={this.endGame}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}