{"ast":null,"code":"var _jsxFileName = \"/Users/Johan/fugu/src/App.js\";\nimport React, { Component } from \"react\";\nimport Game from \"./Game\"; //import Board from \"./Board\";\n\nimport PubNubReact from \"pubnub-react\";\nimport Swal from \"sweetalert2\";\nimport shortid from \"shortid\";\nimport \"./Game.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPressCreate = e => {\n      // Create a random name for the channel\n      this.roomId = shortid.generate().substring(0, 5);\n      this.lobbyChannel = \"fugulobby--\" + this.roomId;\n      this.pubnub.subscribe({\n        channels: [this.lobbyChannel],\n        withPresence: true\n      }); // Open the modal\n\n      Swal.fire({\n        position: \"top\",\n        allowOutsideClick: false,\n        title: \"Share this room ID with your friend\",\n        text: this.roomId,\n        width: 275,\n        padding: \"0.7em\",\n        // Custom CSS\n        customClass: {\n          heightAuto: false,\n          title: \"title-class\",\n          popup: \"popup-class\",\n          confirmButton: \"button-class\"\n        }\n      });\n      this.setState({\n        piece: \"X\",\n        sushis: [true, true, true, false],\n        isRoomCreator: true,\n        isDisabled: true,\n        // Disable the 'Create' button\n        myTurn: true // Room creator makes the 1st move\n\n      });\n    };\n\n    this.onPressJoin = e => {\n      Swal.fire({\n        position: \"top\",\n        input: \"text\",\n        allowOutsideClick: false,\n        inputPlaceholder: \"Enter the room id\",\n        showCancelButton: true,\n        confirmButtonColor: \"rgb(208,33,41)\",\n        confirmButtonText: \"OK\",\n        width: 275,\n        padding: \"0.7em\",\n        customClass: {\n          heightAuto: false,\n          popup: \"popup-class\",\n          confirmButton: \"join-button-class \",\n          cancelButton: \"join-button-class\"\n        }\n      }).then(result => {\n        // Check if the user typed a value in the input field\n        if (result.value) {\n          this.joinRoom(result.value);\n        }\n      });\n    };\n\n    this.joinRoom = value => {\n      this.roomId = value;\n      this.lobbyChannel = \"fugulobby--\" + this.roomId; // Check the number of people in the channel\n\n      this.pubnub.hereNow({\n        channels: [this.lobbyChannel]\n      }).then(response => {\n        if (response.totalOccupancy < 2) {\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          this.setState({\n            piece: \"O\",\n            sushis: [true, true, true, false]\n          });\n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true\n            },\n            channel: this.lobbyChannel\n          });\n        } else {\n          // Game in progress\n          Swal.fire({\n            position: \"top\",\n            allowOutsideClick: false,\n            title: \"Error\",\n            text: \"Game in progress. Try another room.\",\n            width: 275,\n            padding: \"0.7em\",\n            customClass: {\n              heightAuto: false,\n              title: \"title-class\",\n              popup: \"popup-class\",\n              confirmButton: \"button-class\"\n            }\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        piece: \"\",\n        isPlaying: false,\n        isRoomCreator: false,\n        isDisabled: false,\n        myTurn: false\n      });\n      this.lobbyChannel = null;\n      this.gameChannel = null;\n      this.roomId = null;\n      this.pubnub.unsubscribe({\n        channels: [this.lobbyChannel, this.gameChannel]\n      });\n    };\n\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-fae6dfb9-0fd1-4b5e-a0f3-a3d4511085e9\",\n      subscribeKey: \"sub-c-0b5e637c-3675-11eb-b6eb-96faa39b9528\"\n    });\n    this.state = {\n      piece: \"\",\n      sushis: [],\n      placed: [],\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n    this.pubnub.init(this);\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, msg => {\n        // Start the game once an opponent joins the channel\n        if (msg.message.notRoomCreator) {\n          // Create a different channel for the game\n          this.gameChannel = \"fuguegame--\" + this.roomId;\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n          this.setState({\n            isPlaying: true\n          }); // Close the modals if they are opened\n\n          Swal.close();\n          console.log(this.state.sushis);\n\n          (async () => {\n            /* inputOptions can be an object or Promise */\n            const inputOptions = new Promise(resolve => {\n              setTimeout(() => {\n                resolve({\n                  true: \"Normal sushi\",\n                  false: \"Fugu sushi\"\n                });\n              }, 1000);\n            });\n\n            const _ref = await Swal.fire({\n              title: \"Choose your first move\",\n              input: \"radio\",\n              inputOptions: inputOptions,\n              allowOutsideClick: false,\n              allowEscapeKey: false,\n              confirmButtonText: \"Place sushi\",\n              inputValidator: value => {\n                if (!value) {\n                  return \"You need to choose something!\";\n                } else {\n                  if (value === \"true\" && !this.state.sushis.includes(true)) {\n                    return \"You do not have enough of this type of sushi!\";\n                  }\n\n                  if (value === \"false\" && !this.state.sushis.includes(false)) {\n                    return \"You do not have enough of this type of sushi!\";\n                  }\n                }\n              }\n            }),\n                  sushi = _ref.value;\n\n            if (sushi) {\n              if (sushi === \"true\") {\n                this.state.placed.push(true);\n                this.state.sushis.shift();\n              }\n\n              if (sushi === \"false\") {\n                this.state.placed.push(false);\n                this.state.sushis.pop();\n              }\n\n              Swal.fire({\n                html: \"you selected \".concat(sushi)\n              });\n              console.log(this.state.placed);\n              console.log(this.state.sushis);\n            }\n          })();\n        }\n      });\n    }\n  } // Create a room channel\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"backGround-Brown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"\\xA1FUGU!\")), React.createElement(\"div\", {\n      className: \"gamePin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Gamepin: \", this.roomId, \" \")), !this.state.isPlaying && React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://imgur.com/a/y9ZwmvV\",\n      alt: \"Welcome to FUGU\",\n      width: \"500\",\n      height: \"600\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"create-button \",\n      disabled: this.state.isDisabled,\n      onClick: e => this.onPressCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \" \", \"Create\"), React.createElement(\"button\", {\n      className: \"join-button\",\n      onClick: e => this.onPressJoin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \" \", \"Join\"))), this.state.isPlaying && React.createElement(Game, {\n      pubnub: this.pubnub,\n      gameChannel: this.gameChannel,\n      piece: this.state.piece,\n      isRoomCreator: this.state.isRoomCreator,\n      myTurn: this.state.myTurn,\n      xUsername: this.state.xUsername,\n      oUsername: this.state.oUsername,\n      endGame: this.endGame,\n      placed: this.state.placed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Johan/fugu/src/App.js"],"names":["React","Component","Game","PubNubReact","Swal","shortid","App","constructor","props","onPressCreate","e","roomId","generate","substring","lobbyChannel","pubnub","subscribe","channels","withPresence","fire","position","allowOutsideClick","title","text","width","padding","customClass","heightAuto","popup","confirmButton","setState","piece","sushis","isRoomCreator","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","cancelButton","then","result","value","joinRoom","hereNow","response","totalOccupancy","publish","message","notRoomCreator","channel","catch","error","console","log","endGame","isPlaying","gameChannel","unsubscribe","publishKey","subscribeKey","state","placed","init","componentWillUnmount","componentDidUpdate","getMessage","msg","close","inputOptions","Promise","resolve","setTimeout","true","false","allowEscapeKey","inputValidator","includes","sushi","push","shift","pop","html","render","xUsername","oUsername"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Game from \"./Game\";\n//import Board from \"./Board\";\nimport PubNubReact from \"pubnub-react\";\nimport Swal from \"sweetalert2\";\nimport shortid from \"shortid\";\nimport \"./Game.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: \"pub-c-fae6dfb9-0fd1-4b5e-a0f3-a3d4511085e9\",\n      subscribeKey: \"sub-c-0b5e637c-3675-11eb-b6eb-96faa39b9528\"\n    });\n\n    this.state = {\n      piece: \"\",\n      sushis: [],\n      placed: [],\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n    this.pubnub.init(this);\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, msg => {\n        // Start the game once an opponent joins the channel\n        if (msg.message.notRoomCreator) {\n          // Create a different channel for the game\n          this.gameChannel = \"fuguegame--\" + this.roomId;\n\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n\n          this.setState({\n            isPlaying: true\n          });\n\n          // Close the modals if they are opened\n          Swal.close();\n          console.log(this.state.sushis);\n          (async () => {\n            /* inputOptions can be an object or Promise */\n            const inputOptions = new Promise(resolve => {\n              setTimeout(() => {\n                resolve({\n                  true: \"Normal sushi\",\n                  false: \"Fugu sushi\"\n                });\n              }, 1000);\n            });\n\n            const { value: sushi } = await Swal.fire({\n              title: \"Choose your first move\",\n              input: \"radio\",\n              inputOptions: inputOptions,\n              allowOutsideClick: false,\n              allowEscapeKey: false,\n              confirmButtonText: \"Place sushi\",\n              inputValidator: value => {\n                if (!value) {\n                  return \"You need to choose something!\";\n                } else {\n                  if (value === \"true\" && !this.state.sushis.includes(true)) {\n                    return \"You do not have enough of this type of sushi!\";\n                  }\n                  if (value === \"false\" && !this.state.sushis.includes(false)) {\n                    return \"You do not have enough of this type of sushi!\";\n                  }\n                }\n              }\n            });\n\n            if (sushi) {\n              if (sushi === \"true\") {\n                this.state.placed.push(true);\n                this.state.sushis.shift();\n              }\n              if (sushi === \"false\") {\n                this.state.placed.push(false);\n                this.state.sushis.pop();\n              }\n              Swal.fire({ html: `you selected ${sushi}` });\n              console.log(this.state.placed);\n              console.log(this.state.sushis);\n            }\n          })();\n        }\n      });\n    }\n  }\n\n  // Create a room channel\n  onPressCreate = e => {\n    // Create a random name for the channel\n    this.roomId = shortid.generate().substring(0, 5);\n    this.lobbyChannel = \"fugulobby--\" + this.roomId;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n    // Open the modal\n    Swal.fire({\n      position: \"top\",\n      allowOutsideClick: false,\n      title: \"Share this room ID with your friend\",\n      text: this.roomId,\n      width: 275,\n      padding: \"0.7em\",\n      // Custom CSS\n      customClass: {\n        heightAuto: false,\n        title: \"title-class\",\n        popup: \"popup-class\",\n        confirmButton: \"button-class\"\n      }\n    });\n\n    this.setState({\n      piece: \"X\",\n      sushis: [true, true, true, false],\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true // Room creator makes the 1st move\n    });\n  };\n\n  // The 'Join' button was pressed\n  onPressJoin = e => {\n    Swal.fire({\n      position: \"top\",\n      input: \"text\",\n      allowOutsideClick: false,\n      inputPlaceholder: \"Enter the room id\",\n      showCancelButton: true,\n      confirmButtonColor: \"rgb(208,33,41)\",\n      confirmButtonText: \"OK\",\n      width: 275,\n      padding: \"0.7em\",\n      customClass: {\n        heightAuto: false,\n        popup: \"popup-class\",\n        confirmButton: \"join-button-class \",\n        cancelButton: \"join-button-class\"\n      }\n    }).then(result => {\n      // Check if the user typed a value in the input field\n      if (result.value) {\n        this.joinRoom(result.value);\n      }\n    });\n  };\n\n  // Join a room channel\n  joinRoom = value => {\n    this.roomId = value;\n    this.lobbyChannel = \"fugulobby--\" + this.roomId;\n\n    // Check the number of people in the channel\n    this.pubnub\n      .hereNow({\n        channels: [this.lobbyChannel]\n      })\n      .then(response => {\n        if (response.totalOccupancy < 2) {\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n\n          this.setState({\n            piece: \"O\",\n            sushis: [true, true, true, false]\n          });\n\n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true\n            },\n            channel: this.lobbyChannel\n          });\n        } else {\n          // Game in progress\n          Swal.fire({\n            position: \"top\",\n            allowOutsideClick: false,\n            title: \"Error\",\n            text: \"Game in progress. Try another room.\",\n            width: 275,\n            padding: \"0.7em\",\n            customClass: {\n              heightAuto: false,\n              title: \"title-class\",\n              popup: \"popup-class\",\n              confirmButton: \"button-class\"\n            }\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: \"\",\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"backGround-Brown\">\n        <div className=\"title\">\n          <p>¡FUGU!</p>\n        </div>\n        <div className=\"gamePin\">\n          <p>Gamepin: {this.roomId} </p>\n        </div>\n\n        {!this.state.isPlaying && (\n          <div className=\"game\">\n            <img\n              src=\"https://imgur.com/a/y9ZwmvV\"\n              alt=\"Welcome to FUGU\"\n              width=\"500\"\n              height=\"600\"\n            >\n              {\" \"}\n            </img>\n\n            <div className=\"button-container\">\n              <button\n                className=\"create-button \"\n                disabled={this.state.isDisabled}\n                onClick={e => this.onPressCreate()}\n              >\n                {\" \"}\n                Create\n              </button>\n              <button className=\"join-button\" onClick={e => this.onPressJoin()}>\n                {\" \"}\n                Join\n              </button>\n            </div>\n          </div>\n        )}\n\n        {this.state.isPlaying && (\n          <Game\n            pubnub={this.pubnub}\n            gameChannel={this.gameChannel}\n            piece={this.state.piece}\n            isRoomCreator={this.state.isRoomCreator}\n            myTurn={this.state.myTurn}\n            xUsername={this.state.xUsername}\n            oUsername={this.state.oUsername}\n            endGame={this.endGame}\n            placed={this.state.placed}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}