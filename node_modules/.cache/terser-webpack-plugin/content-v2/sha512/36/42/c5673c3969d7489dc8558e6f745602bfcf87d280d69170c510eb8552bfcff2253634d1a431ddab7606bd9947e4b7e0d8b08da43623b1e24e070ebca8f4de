{"map":"{\"version\":3,\"sources\":[\"/Users/Johan/fugu/src/Board.js\",\"/Users/Johan/fugu/src/EatingBoard.js\",\"/Users/Johan/fugu/src/Game.js\",\"/Users/Johan/fugu/src/App.js\",\"/Users/Johan/fugu/src/index.js\"],\"names\":[\"Board\",\"props\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"react_default\",\"a\",\"createElement\",\"id\",\"src\",\"alt\",\"hidden\",\"placed\",\"length\",\"React\",\"Component\",\"EatingBoard\",\"lastBidding\",\"className\",\"onClick\",\"widt\",\"heigh\",\"eatOwn\",\"Game\",\"_this\",\"newRound\",\"player\",\"console\",\"log\",\"state\",\"setState\",\"whosTurn\",\"bidding\",\"passBidding\",\"eatingStage\",\"piecesClone\",\"toConsumableArray\",\"pieces\",\"sushis\",\"bid\",\"turn\",\"players\",\"indexOf\",\"userName\",\"whosBidding\",\"passedPlayers\",\"announceEating\",\"amount\",\"pubnub\",\"publish\",\"message\",\"whoEating\",\"channel\",\"gameChannel\",\"announceBidding\",\"e\",\"lastAmount\",\"amountBidden\",\"ateBy\",\"annouceWinner\",\"bidder\",\"success\",\"reset\",\"annouceFail\",\"failed\",\"myMove\",\"publishBidding\",\"makeBid\",\"onMakeMove\",\"sushi\",\"occupancy\",\"piece\",\"parseInt\",\"Swal\",\"fire\",\"title\",\"input\",\"showCancelButton\",\"cancelButtonText\",\"cancelButtonColor\",\"inputAttributes\",\"min\",\"confirmButtonText\",\"allowOutsideClick\",\"then\",\"result\",\"value\",\"showChoices\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"inputOptions\",\"_ref2\",\"wrap\",\"_context\",\"prev\",\"next\",\"Promise\",\"resolve\",\"setTimeout\",\"true\",\"false\",\"eat\",\"allowEscapeKey\",\"inputValidator\",\"includes\",\"sent\",\"push\",\"shift\",\"pop\",\"stop\",\"sendSushi\",\"clicked\",\"eatOwnSushi\",\"LoosePiece\",\"eatSushi\",\"Math\",\"floor\",\"random\",\"myTurn\",\"nextRound\",\"gameOver\",\"counter\",\"_this2\",\"getMessage\",\"msg\",\"index\",\"close\",\"type\",\"text\",\"endGame\",\"status\",\"_this3\",\"concat\",\"src_Board\",\"squares\",\"disabled\",\"src_EatingBoard\",\"App\",\"onPressCreate\",\"roomId\",\"shortid\",\"generate\",\"substring\",\"lobbyChannel\",\"subscribe\",\"channels\",\"withPresence\",\"mixin\",\"progressSteps\",\"customClass\",\"heightAuto\",\"popup\",\"confirmButton\",\"queue\",\"answer\",\"JSON\",\"stringify\",\"editedAnswer\",\"isRoomCreator\",\"isDisabled\",\"onPressJoin\",\"answers\",\"html\",\"joinRoom\",\"getNumberInChannel\",\"username\",\"hereNow\",\"response\",\"totalOccupancy\",\"newPlayer\",\"position\",\"width\",\"padding\",\"catch\",\"error\",\"startGame\",\"gameStarted\",\"isPlaying\",\"unsubscribe\",\"PubNubReact\",\"publishKey\",\"subscribeKey\",\"init\",\"assertThisInitialized\",\"src_Game\",\"xUsername\",\"oUsername\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\n\\nclass Board extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <div id=\\\"backgroundBoard\\\">\\n        <img\\n          id=\\\"emptyBoard\\\"\\n          src=\\\"https://i.imgur.com/LNH3flq.png\\\"\\n          alt=\\\"board0\\\"\\n          hidden={!(this.props.placed.length === 0)}\\n        ></img>\\n        <img\\n          id=\\\"fuguBoard\\\"\\n          src=\\\"https://i.imgur.com/xBtGEro.png\\\"\\n          alt=\\\"board1\\\"\\n          hidden={!(this.props.placed.length === 1)}\\n        ></img>\\n        <img\\n          id=\\\"fuguBoard\\\"\\n          src=\\\"https://i.imgur.com/v6qEAq9.png\\\"\\n          alt=\\\"board2\\\"\\n          hidden={!(this.props.placed.length === 2)}\\n        ></img>\\n        <img\\n          id=\\\"fuguBoard\\\"\\n          src=\\\"https://i.imgur.com/Msw4WCu.png\\\"\\n          alt=\\\"board3\\\"\\n          hidden={!(this.props.placed.length === 3)}\\n        ></img>\\n        <img\\n          id=\\\"fuguBoard\\\"\\n          src=\\\"https://i.imgur.com/656n59P.png\\\"\\n          alt=\\\"board4\\\"\\n          hidden={!(this.props.placed.length === 4)}\\n        ></img>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Board;\\n\",\"import React from \\\"react\\\";\\n\\nclass EatingBoard extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <div id=\\\"backgroundBoard\\\">\\n        {!this.props.lastBidding && (\\n          <button className=\\\"boardButton\\\" onClick={this.props.onClick}>\\n            <img\\n              id=\\\"emptyBoard\\\"\\n              src=\\\"https://i.imgur.com/LNH3flq.png\\\"\\n              alt=\\\"board0\\\"\\n              hidden={!(this.props.placed.length === 0)}\\n            ></img>\\n            <img\\n              id=\\\"fuguBoard\\\"\\n              src=\\\"https://i.imgur.com/xBtGEro.png\\\"\\n              alt=\\\"board1\\\"\\n              hidden={!(this.props.placed.length === 1)}\\n            ></img>\\n            <img\\n              id=\\\"fuguBoard\\\"\\n              src=\\\"https://i.imgur.com/v6qEAq9.png\\\"\\n              alt=\\\"board2\\\"\\n              hidden={!(this.props.placed.length === 2)}\\n            ></img>\\n            <img\\n              id=\\\"fuguBoard\\\"\\n              src=\\\"https://i.imgur.com/Msw4WCu.png\\\"\\n              alt=\\\"board3\\\"\\n              hidden={!(this.props.placed.length === 3)}\\n            ></img>\\n            <img\\n              id=\\\"fuguBoard\\\"\\n              src=\\\"https://i.imgur.com/656n59P.png\\\"\\n              alt=\\\"board4\\\"\\n              hidden={!(this.props.placed.length === 4)}\\n            ></img>\\n          </button>\\n        )}\\n        {this.props.lastBidding && (\\n          <img\\n            src=\\\"https://i.imgur.com/y1DXfJk.png\\\"\\n            alt=\\\"Welcome to FUGU\\\"\\n            widt=\\\"30px\\\"\\n            heigh=\\\"30px\\\"\\n          />\\n        )}\\n        <button onClick={this.props.eatOwn} hidden={!this.props.lastBidding}>\\n          {\\\" \\\"}\\n          Eat Your sushis\\n        </button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default EatingBoard;\\n\",\"import React from \\\"react\\\";\\nimport Board from \\\"./Board\\\";\\nimport EatingBoard from \\\"./EatingBoard\\\";\\nimport Swal from \\\"sweetalert2\\\";\\nimport { throwStatement } from \\\"@babel/types\\\";\\n\\nclass Game extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      whosTurn: this.props.myTurn,\\n      bidding: false,\\n      passBidding: false,\\n      lastBidding: false,\\n      eatingStage: false,\\n      nextRound: false,\\n      placed: this.props.placed\\n    };\\n    this.pieces = [true, true, true, false];\\n    this.sushis = [true, true, true, false];\\n    this.turn = 0;\\n    this.whosBidding = null;\\n    this.gameOver = false;\\n    this.counter = 0;\\n    this.bid = 0;\\n    this.passedPlayers = [];\\n  }\\n\\n  componentDidMount() {\\n    this.props.pubnub.getMessage(this.props.gameChannel, msg => {\\n      this.turn = msg.message.turn;\\n      //Makes it the right players turn\\n      if (this.props.players[msg.message.turn] === this.props.userName) {\\n        this.myMove(msg.message.index, msg.message.piece);\\n      }\\n      //Sets the game into bidding stage\\n      else if (msg.message.bidding) {\\n        if (msg.message.amountBidden > 0) {\\n          this.publishBidding(msg.message.amountBidden, msg.message.ateBy);\\n          console.log(\\n            \\\"Player \\\" + msg.message.ateBy + \\\"bid \\\" + msg.message.amountBidden\\n          );\\n          this.publishBidding(msg.message.amountBidden, msg.message.ateBy);\\n        } else if (msg.message.amountBidden === null) {\\n          console.log(msg.message.ateBy + \\\" passed\\\");\\n          if (!this.passedPlayers.includes(msg.message.ateBy)) {\\n            this.passedPlayers.push(msg.message.ateBy);\\n          }\\n\\n          if (\\n            this.passedPlayers.length === this.props.players.length - 1 &&\\n            !this.state.passBidding\\n          ) {\\n            console.log(\\\"du er den siste som er igjen\\\");\\n            this.setState({\\n              lastBidding: true\\n            });\\n            this.announceEating(this.userName, this.bid);\\n            Swal.close();\\n          } else {\\n            this.publishBidding(msg.message.lastAmount, msg.message.ateBy);\\n          }\\n        } else {\\n          console.log(\\n            \\\"Vi er inne i elsen og denne spilleren skal begynne å by \\\" +\\n              this.whosBidding\\n          );\\n          this.setState({\\n            bidding: true\\n          });\\n        }\\n        console.log(\\\"LETS START BIDDING!\\\");\\n      }\\n      //Sets the game into the eating stage\\n      else if (msg.message.eatingStage) {\\n        Swal.close();\\n        this.setState({\\n          eatingStage: true,\\n          bidding: false\\n        });\\n        console.log(\\\"eating stage\\\");\\n      }\\n      //Eating player recives the sushi they clicked\\n      else if (msg.message.clicked && this.state.lastBidding) {\\n        this.eatSushi(msg.message.sushi);\\n      }\\n      //Fails the eating attempt\\n      else if (msg.message.failed) {\\n        Swal.fire({\\n          type: \\\"error\\\",\\n          title: \\\"Oops...\\\",\\n          text:\\n            \\\"The attempt failed. The atempting player will loose a random sushi.\\\"\\n        }).then(result => {\\n          this.newRound(msg.message.userName);\\n          console.log(\\\"Nå ble den trykket\\\");\\n        });\\n      }\\n      //The eating attempt is a success\\n      else if (msg.message.success) {\\n        Swal.fire({\\n          type: \\\"success\\\",\\n          title: \\\"Wohooo!\\\",\\n          confirmButtonText: \\\"Next Round\\\",\\n          text:\\n            \\\"The attempt was a success. The atempting player will receive one point!.\\\"\\n        }).then(result => {\\n          this.newRound(msg.message.userName);\\n          console.log(\\\"Nå ble den trykket\\\");\\n        });\\n        console.log(\\\"The bet was successfull\\\");\\n      }\\n\\n      // End the game and go back to the lobby\\n      else if (msg.message.endGame) {\\n        Swal.close();\\n        this.props.endGame();\\n      }\\n    });\\n  }\\n  newRound = player => {\\n    console.log(\\\"NEW ROUND BLIR KJØRT\\\");\\n\\n    if (this.state.lastBidding) {\\n      //Makes the one who bidded highest last round start\\n      this.setState({\\n        whosTurn: true,\\n        bidding: false,\\n        passBidding: false,\\n        lastBidding: false,\\n        eatingStage: false,\\n        placed: []\\n      });\\n      const piecesClone = [...this.pieces];\\n      this.sushis = piecesClone;\\n      this.bid = 0;\\n      this.turn = this.props.players.indexOf(this.props.userName);\\n      this.whosBidding = null;\\n      this.passedPlayers = [];\\n    } else {\\n      // Resets for everyone else\\n      console.log(\\\"nullstiller for ikke høyeste budgiver\\\");\\n      this.setState({\\n        whosTurn: false,\\n        bidding: false,\\n        passBidding: false,\\n        lastBidding: false,\\n        eatingStage: false,\\n        placed: []\\n      });\\n      const piecesClone = [...this.pieces];\\n      this.sushis = piecesClone;\\n      this.turn = this.props.players.indexOf(player);\\n      this.bid = 0;\\n      this.whosBidding = null;\\n      this.passedPlayers = [];\\n    }\\n  };\\n  announceEating = (player, amount) => {\\n    this.props.pubnub.publish({\\n      message: {\\n        eatingStage: true,\\n        whoEating: player,\\n        amount: amount,\\n        bidding: false\\n      },\\n      channel: this.props.gameChannel\\n    });\\n  };\\n\\n  announceBidding = (e, player, lastAmount) => {\\n    //tell other players the game is moving into the bidding phase\\n    this.props.pubnub.publish({\\n      message: {\\n        bidding: true,\\n        amountBidden: e,\\n        ateBy: player,\\n        lastAmount: lastAmount\\n      },\\n      channel: this.props.gameChannel\\n    });\\n  };\\n\\n  annouceWinner = bidder => {\\n    console.log(\\\"Announce winner\\\");\\n    this.props.pubnub.publish({\\n      message: {\\n        success: true,\\n        userName: this.props.userName,\\n        reset: true\\n      },\\n      channel: this.props.gameChannel\\n    });\\n  };\\n  annouceFail = bidder => {\\n    this.props.pubnub.publish({\\n      message: {\\n        failed: true,\\n        userName: this.props.userName,\\n        reset: true\\n      },\\n      channel: this.props.gameChannel\\n    });\\n  };\\n\\n  // Opponent's move is annpunced\\n  myMove = e => {\\n    //this.turn = this.turn === 1 ? 2 : 1;\\n    this.setState({\\n      whosTurn: !this.state.whosTurn\\n    });\\n  };\\n\\n  publishBidding = (e, player) => {\\n    //Setter whos bidding til neste som skal spise\\n    this.whosBidding =\\n      player + 1 === this.props.players.length ? 0 : player + 1;\\n    if (this.whosBidding === this.props.players.indexOf(this.props.userName)) {\\n      if (this.state.passBidding) {\\n        this.setState({\\n          whosTurn: !this.state.whosTurn\\n        });\\n        this.announceBidding(null, this.whosBidding, e);\\n        this.setState({\\n          whosTurn: !this.state.whosTurn\\n        });\\n      } else {\\n        this.setState({\\n          whosTurn: true\\n        });\\n        this.makeBid(e, this.whosBidding);\\n      }\\n    } else {\\n      console.log(\\\"Noen andre skal spise akkuratt nå\\\");\\n    }\\n  };\\n\\n  onMakeMove = sushi => {\\n    console.log(\\\"We are about to make a move\\\");\\n\\n    // Check if the square is empty and if it's the player's turn to make a move\\n\\n    //squares[index] = this.props.piece;\\n\\n    this.setState({\\n      whosTurn: !this.state.whosTurn\\n    });\\n    console.log(\\\"now this player is making a move\\\" + this.turn);\\n    console.log(\\\"the total capacity is\\\" + this.props.occupancy);\\n\\n    // Other player's turn to make a move\\n    this.turn = this.turn + 1 === this.props.players.length ? 0 : this.turn + 1;\\n    console.log(\\n      \\\" next move will be made by player \\\" + this.props.players[this.turn]\\n    );\\n\\n    // Publish move to the channel\\n    this.props.pubnub.publish({\\n      message: {\\n        piece: this.props.piece,\\n        turn: this.turn\\n      },\\n      channel: this.props.gameChannel\\n    });\\n    console.log(\\\"We made a move\\\");\\n\\n    //Check if there is a winner\\n    //this.checkForWinner(squares);\\n  };\\n  makeBid = (e, player) => {\\n    if (this.state.lastBidding) {\\n      return;\\n    }\\n    const a = parseInt(e) + 1;\\n    console.log(\\\"The last amount you bid was\\\" + this.bid);\\n    Swal.fire({\\n      title: \\\"How many pieces do you think you can eat?\\\",\\n      input: \\\"number\\\",\\n      showCancelButton: true,\\n      cancelButtonText: \\\"Pass\\\",\\n      cancelButtonColor: \\\"Orange\\\",\\n      inputAttributes: {\\n        min: a\\n      },\\n      confirmButtonText: \\\"Bid\\\",\\n      allowOutsideClick: false\\n    }).then(result => {\\n      if (result.value) {\\n        console.log(\\\"DU mener du kan spise \\\" + result.value);\\n        this.bid = result.value;\\n        this.setState({\\n          whosTurn: !this.state.whosTurn\\n        });\\n        this.announceBidding(result.value, player);\\n      } else {\\n        this.setState({\\n          passBidding: true,\\n          bidding: false\\n        });\\n        console.log(\\\"Du har passet\\\");\\n        this.setState({\\n          whosTurn: !this.state.whosTurn\\n        });\\n        this.announceBidding(null, player, e);\\n      }\\n    });\\n  };\\n\\n  showChoices = e => {\\n    (async () => {\\n      /* inputOptions can be an object or Promise */\\n      const inputOptions = new Promise(resolve => {\\n        setTimeout(() => {\\n          resolve({\\n            true: \\\"Normal sushi\\\",\\n            false: \\\"Fugu sushi\\\",\\n            eat: \\\"Start bidding!\\\"\\n          });\\n        }, 1000);\\n      });\\n\\n      const { value: sushi } = await Swal.fire({\\n        title: \\\"What sushi would you like to place?\\\",\\n        input: \\\"radio\\\",\\n        inputOptions: inputOptions,\\n        allowOutsideClick: false,\\n        allowEscapeKey: false,\\n        confirmButtonText: \\\"Place sushi\\\",\\n        inputValidator: value => {\\n          if (!value) {\\n            return \\\"You need to choose something!\\\";\\n          } else {\\n            if (value === \\\"true\\\" && !this.sushis.includes(true)) {\\n              return \\\"You do not have enough of this type of sushi!\\\";\\n            }\\n\\n            if (value === \\\"false\\\" && !this.sushis.includes(false)) {\\n              return \\\"You do not have enough of this type of sushi!\\\";\\n            }\\n          }\\n        }\\n      });\\n\\n      if (sushi) {\\n        if (sushi === \\\"eat\\\") {\\n          this.whosBidding = this.turn;\\n          this.announceBidding(0);\\n          this.setState({\\n            bidding: true\\n          });\\n          this.makeBid(0, this.whosBidding);\\n        } else {\\n          if (sushi === \\\"true\\\") {\\n            this.state.placed.push(true);\\n            this.sushis.shift();\\n            console.log(\\\"this is what you have placed \\\" + this.state.placed);\\n            console.log(\\\"And this is what you have left \\\" + this.sushis);\\n          }\\n          if (sushi === \\\"false\\\") {\\n            this.state.placed.push(false);\\n            this.sushis.pop();\\n            console.log(\\\"this is what you have placed\\\" + this.state.placed);\\n            console.log(\\\"And this is what you have left \\\" + this.props.players);\\n          }\\n          this.onMakeMove(sushi);\\n          console.log(this.state.placed);\\n          console.log(this.sushis);\\n        }\\n      }\\n    })();\\n  };\\n  //If their screen is clicked they send a sushi to the last bidder.\\n  sendSushi = e => {\\n    this.props.pubnub.publish({\\n      message: {\\n        clicked: true,\\n        sushi: this.state.placed.pop()\\n      },\\n      channel: this.props.gameChannel\\n    });\\n    console.log(\\\"Sushi har blitt sendt\\\");\\n  };\\n  //Eats all their own sushi at once. Fails bid if not enough sushis.\\n  eatOwnSushi = placed => {\\n    while (this.state.placed.length > 0) {\\n      const s = this.state.placed.pop();\\n      if (!s) {\\n        this.LoosePiece();\\n        this.annouceFail();\\n        break;\\n      } else {\\n        this.bid -= 1;\\n        if (this.bid === 0) {\\n          this.annouceWinner(); // Needs to be implemented\\n          break;\\n        }\\n      }\\n    }\\n    console.log(\\\"Vi er ferdig meg while løkken\\\");\\n    console.log(this.bid);\\n  };\\n\\n  eatSushi = sushi => {\\n    console.log(\\\"Nå skal vi spise en sushi\\\");\\n    if (!sushi) {\\n      this.LoosePiece();\\n      this.annouceFail(); //This person has failed the attempt and looses a piece.\\n    } else if (sushi) {\\n      this.bid -= 1;\\n      console.log(\\\"Vi har trukket fra en sushi\\\");\\n      console.log(this.bid);\\n      if (this.bid === 0) {\\n        console.log(\\\"Vi er inne i vinner iffen\\\");\\n        this.annouceWinner();\\n      }\\n    }\\n  };\\n\\n  LoosePiece = e => {\\n    if (this.pieces.includes(false)) {\\n      const n = Math.floor(Math.random() * this.pieces.length);\\n      if (n === 1) {\\n        this.pieces.pop();\\n        console.log(\\\"Du mistet en fugu sushi\\\");\\n      } else {\\n        this.pieces.shift();\\n        console.log(\\\"Du mistet en vanlig sushi\\\");\\n      }\\n    } else {\\n      this.pieces.pop();\\n      console.log(\\n        \\\"Du mistet en valig sushi siden du ikke har noen fuguer igjen\\\"\\n      );\\n    }\\n  };\\n\\n  render() {\\n    let status;\\n    // Change to current player's turn\\n    status = `${this.state.whosTurn ? \\\"Your turn\\\" : \\\"Opponent's turn\\\"}`;\\n\\n    return (\\n      <div className=\\\"game\\\">\\n        {!this.state.eatingStage && (\\n          <div className=\\\"board\\\">\\n            <Board\\n              squares={this.state.squares}\\n              //onClick={index => this.onMakeMove(index)}\\n              placed={this.state.placed}\\n            />\\n            <div id=\\\"functions\\\">\\n              <p className=\\\"status-info\\\">{status}</p>\\n              <button\\n                className=\\\"move-button\\\"\\n                disabled={!this.state.whosTurn}\\n                onClick={e => this.showChoices()}\\n                hidden={\\n                  this.state.bidding ||\\n                  this.state.passBidding ||\\n                  this.state.eatingStage\\n                }\\n              >\\n                {\\\" \\\"}\\n                Make move\\n              </button>\\n            </div>\\n          </div>\\n        )}\\n        {this.state.eatingStage && (\\n          <EatingBoard\\n            squares={this.state.squares}\\n            onClick={e => this.sendSushi()}\\n            placed={this.state.placed}\\n            lastBidding={this.state.lastBidding}\\n            eatOwn={e => this.eatOwnSushi()}\\n          />\\n        )}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Game;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport Game from \\\"./Game\\\";\\n//import Board from \\\"./Board\\\";\\nimport PubNubReact from \\\"pubnub-react\\\";\\nimport Swal from \\\"sweetalert2\\\";\\nimport shortid from \\\"shortid\\\";\\nimport \\\"./Game.css\\\";\\n//import { placeholder } from \\\"@babel/types\\\";\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.pubnub = new PubNubReact({\\n      publishKey: \\\"pub-c-fae6dfb9-0fd1-4b5e-a0f3-a3d4511085e9\\\",\\n      subscribeKey: \\\"sub-c-0b5e637c-3675-11eb-b6eb-96faa39b9528\\\"\\n    });\\n\\n    this.state = {\\n      piece: \\\"\\\",\\n      sushis: [],\\n      placed: [],\\n      isPlaying: false,\\n      isRoomCreator: false,\\n      isDisabled: false,\\n      myTurn: false\\n    };\\n\\n    this.lobbyChannel = null;\\n    this.gameChannel = null;\\n    this.roomId = null;\\n    this.pubnub.init(this);\\n    this.userName = null;\\n    this.players = [];\\n    this.pieces = [true, true, true, false];\\n  }\\n\\n  componentWillUnmount() {\\n    this.pubnub.unsubscribe({\\n      channels: [this.lobbyChannel, this.gameChannel]\\n    });\\n  }\\n\\n  componentDidUpdate() {\\n    // Check that the player is connected to a channel\\n    if (this.lobbyChannel != null) {\\n      this.pubnub.getMessage(this.lobbyChannel, msg => {\\n        if (msg.message.newPlayer) {\\n          this.players.push(msg.message.userName);\\n        }\\n        // Start the game once an opponent joins the channel\\n        if (msg.message.gameStarted) {\\n          // Create a different channel for the game\\n          this.gameChannel = \\\"fuguegame--\\\" + this.roomId;\\n          this.players = msg.message.players;\\n\\n          this.pubnub.subscribe({\\n            channels: [this.gameChannel]\\n          });\\n\\n          this.setState({\\n            isPlaying: true\\n          });\\n\\n          // Close the modals if they are opened\\n          Swal.close();\\n          console.log(this.state.sushis);\\n          /*\\n          (async () => {\\n            const inputOptions = new Promise(resolve => {\\n              setTimeout(() => {\\n                resolve({\\n                  true: \\\"Normal sushi\\\",\\n                  false: \\\"Fugu sushi\\\"\\n                });\\n              }, 1000);\\n            });\\n\\n            const { value: sushi } = await Swal.fire({\\n              title: \\\"Choose your first move\\\",\\n              input: \\\"radio\\\",\\n              inputOptions: inputOptions,\\n              allowOutsideClick: false,\\n              allowEscapeKey: false,\\n              confirmButtonText: \\\"Place sushi\\\",\\n              inputValidator: value => {\\n                if (!value) {\\n                  return \\\"You need to choose something!\\\";\\n                } else {\\n                  if (value === \\\"true\\\" && !this.state.sushis.includes(true)) {\\n                    return \\\"You do not have enough of this type of sushi!\\\";\\n                  }\\n                  if (value === \\\"false\\\" && !this.state.sushis.includes(false)) {\\n                    return \\\"You do not have enough of this type of sushi!\\\";\\n                  }\\n                }\\n              }\\n            });\\n\\n            if (sushi) {\\n              if (sushi === \\\"true\\\") {\\n                this.state.placed.push(true);\\n                this.state.sushis.shift();\\n              }\\n              if (sushi === \\\"false\\\") {\\n                this.state.placed.push(false);\\n                this.state.sushis.pop();\\n              }\\n              Swal.fire({ html: `you selected ${sushi}` });\\n              console.log(this.state.placed);\\n              console.log(this.state.sushis);\\n            }\\n          })();\\n\\n          */\\n        }\\n      });\\n    }\\n  }\\n\\n  // Create a room channel\\n  onPressCreate = e => {\\n    // Create a random name for the channel\\n    this.roomId = shortid.generate().substring(0, 5);\\n    this.lobbyChannel = \\\"fugulobby--\\\" + this.roomId;\\n    //this.userName = \\\"Johan\\\";\\n    //this.players.push(\\\"Johan\\\");\\n\\n    this.pubnub.subscribe({\\n      channels: [this.lobbyChannel],\\n      withPresence: true\\n    });\\n\\n    // Open the modal\\n    Swal.mixin({\\n      allowOutsideClick: false,\\n\\n      progressSteps: [\\\"1\\\", \\\"2\\\"],\\n      // Custom CSS\\n      customClass: {\\n        heightAuto: false,\\n        title: \\\"title-class\\\",\\n        popup: \\\"popup-class\\\",\\n        confirmButton: \\\"button-class\\\"\\n      }\\n    })\\n      .queue([\\n        { title: \\\"Share this room ID with your friend\\\", text: this.roomId },\\n        { title: \\\"Enter your username\\\", input: \\\"text\\\" }\\n      ])\\n      .then(result => {\\n        const answer = JSON.stringify(result.value[1]);\\n        const editedAnswer = answer.substring(1, answer.length - 1);\\n        console.log(editedAnswer);\\n        this.userName = editedAnswer;\\n        this.players.push(editedAnswer);\\n      });\\n\\n    this.setState({\\n      piece: 1,\\n      sushis: [true, true, true, false],\\n      isRoomCreator: true,\\n      isDisabled: true, // Disable the 'Create' button\\n      myTurn: true // Room creator makes the 1st move\\n    });\\n  };\\n\\n  // The 'Join' button was pressed\\n  onPressJoin = e => {\\n    Swal.mixin({\\n      input: \\\"text\\\",\\n      confirmButtonText: \\\"Next &rarr;\\\",\\n      showCancelButton: true,\\n      progressSteps: [\\\"1\\\", \\\"2\\\"]\\n    })\\n      .queue([\\n        {\\n          title: \\\"Game Pin\\\",\\n          text: \\\"Enter the 5 characters that is unique for your game\\\"\\n        },\\n        {\\n          title: \\\"Username\\\",\\n          text: \\\"Enter the username you would like to be called \\\"\\n        }\\n      ])\\n      .then(result => {\\n        if (result.value) {\\n          const answers = JSON.stringify(result.value);\\n          Swal.fire({\\n            title: \\\"All done!\\\",\\n            html: `\\n            Your answers:\\n            <pre><code>${answers}</code></pre>\\n          `,\\n            confirmButtonText: \\\"Lovely!\\\"\\n          });\\n          this.userName = result.value[1];\\n          this.joinRoom(result.value[0], result.value[1]);\\n        }\\n      });\\n  };\\n  getNumberInChannel = e => {\\n    console.log(this.players);\\n  };\\n\\n  // Join a room channel\\n  joinRoom = (value, username) => {\\n    this.roomId = value;\\n    this.lobbyChannel = \\\"fugulobby--\\\" + this.roomId;\\n\\n    // Check the number of people in the channel\\n    this.pubnub\\n      .hereNow({\\n        channels: [this.lobbyChannel]\\n      })\\n      .then(response => {\\n        if (response.totalOccupancy < 200) {\\n          this.pubnub.subscribe({\\n            channels: [this.lobbyChannel],\\n            withPresence: true\\n          });\\n\\n          this.setState({\\n            piece: response.totalOccupancy + 1,\\n            sushis: [true, true, true, false]\\n          });\\n\\n          console.log(\\\"Joined game as player \\\" + this.state.piece);\\n\\n          this.pubnub.publish({\\n            message: {\\n              newPlayer: true,\\n              userName: username\\n            },\\n            channel: this.lobbyChannel\\n          });\\n        } else {\\n          // Game in progress\\n          Swal.fire({\\n            position: \\\"top\\\",\\n            allowOutsideClick: false,\\n            title: \\\"Error\\\",\\n            text: \\\"Game in progress. Try another room.\\\",\\n            width: 275,\\n            padding: \\\"0.7em\\\",\\n            customClass: {\\n              heightAuto: false,\\n              title: \\\"title-class\\\",\\n              popup: \\\"popup-class\\\",\\n              confirmButton: \\\"button-class\\\"\\n            }\\n          });\\n        }\\n      })\\n      .catch(error => {\\n        console.log(error);\\n      });\\n  };\\n  startGame = e => {\\n    this.pubnub.publish({\\n      message: {\\n        gameStarted: true,\\n        players: this.players\\n      },\\n      channel: this.lobbyChannel\\n    });\\n  };\\n\\n  // Reset everything\\n  endGame = () => {\\n    this.setState({\\n      piece: \\\"\\\",\\n      isPlaying: false,\\n      isRoomCreator: false,\\n      isDisabled: false,\\n      myTurn: false\\n    });\\n\\n    this.lobbyChannel = null;\\n    this.gameChannel = null;\\n    this.roomId = null;\\n\\n    this.pubnub.unsubscribe({\\n      channels: [this.lobbyChannel, this.gameChannel]\\n    });\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"backGround-Brown\\\">\\n        <div className=\\\"title\\\">\\n          <p>¡FUGU!</p>\\n        </div>\\n        <div className=\\\"gamePin\\\"></div>\\n\\n        {!this.state.isPlaying && (\\n          <div className=\\\"game\\\">\\n            <p>Gamepin: {this.roomId} </p>\\n            <p> Velkommen {this.userName}</p>\\n            <img\\n              src=\\\"https://i.imgur.com/y1DXfJk.png\\\"\\n              alt=\\\"Welcome to FUGU\\\"\\n              widt=\\\"30px\\\"\\n              heigh=\\\"30px\\\"\\n            />\\n            <div className=\\\"button-container\\\">\\n              <button\\n                className=\\\"create-button \\\"\\n                disabled={this.state.isDisabled}\\n                onClick={e => this.onPressCreate()}\\n              >\\n                {\\\" \\\"}\\n                Create\\n              </button>\\n              <button className=\\\"join-button\\\" onClick={e => this.onPressJoin()}>\\n                {\\\" \\\"}\\n                Join\\n              </button>\\n              <button\\n                className=\\\"start-button\\\"\\n                hidden={!this.state.isRoomCreator}\\n                onClick={e => this.startGame()}\\n              >\\n                {\\\" \\\"}\\n                Start\\n              </button>\\n            </div>\\n          </div>\\n        )}\\n\\n        {this.state.isPlaying && (\\n          <Game\\n            pubnub={this.pubnub}\\n            gameChannel={this.gameChannel}\\n            piece={this.state.piece}\\n            isRoomCreator={this.state.isRoomCreator}\\n            myTurn={this.state.myTurn}\\n            xUsername={this.state.xUsername}\\n            oUsername={this.state.oUsername}\\n            endGame={this.endGame}\\n            placed={this.state.placed}\\n            sushis={this.state.sushis}\\n            occupancy={this.players.length}\\n            players={this.players}\\n            userName={this.userName}\\n            pieces={this.pieces}\\n            isPlaying={this.isPlaying}\\n          />\\n        )}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{256:function(e,t,n){},257:function(e,t,n){\"use strict\";n.r(t);var s=n(0),a=n.n(s),i=n(91),o=n.n(i),l=n(7),u=n(8),r=n(10),c=n(9),d=n(30),p=n(11),h=n(48),g=n.n(h),m=n(92),b=n(49),f=function(e){function t(e){return Object(l.a)(this,t),Object(r.a)(this,Object(c.a)(t).call(this,e))}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{id:\"backgroundBoard\"},a.a.createElement(\"img\",{id:\"emptyBoard\",src:\"https://i.imgur.com/LNH3flq.png\",alt:\"board0\",hidden:!(0===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/xBtGEro.png\",alt:\"board1\",hidden:!(1===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/v6qEAq9.png\",alt:\"board2\",hidden:!(2===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/Msw4WCu.png\",alt:\"board3\",hidden:!(3===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/656n59P.png\",alt:\"board4\",hidden:!(4===this.props.placed.length)}))}}]),t}(a.a.Component),y=function(e){function t(e){return Object(l.a)(this,t),Object(r.a)(this,Object(c.a)(t).call(this,e))}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{id:\"backgroundBoard\"},!this.props.lastBidding&&a.a.createElement(\"button\",{className:\"boardButton\",onClick:this.props.onClick},a.a.createElement(\"img\",{id:\"emptyBoard\",src:\"https://i.imgur.com/LNH3flq.png\",alt:\"board0\",hidden:!(0===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/xBtGEro.png\",alt:\"board1\",hidden:!(1===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/v6qEAq9.png\",alt:\"board2\",hidden:!(2===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/Msw4WCu.png\",alt:\"board3\",hidden:!(3===this.props.placed.length)}),a.a.createElement(\"img\",{id:\"fuguBoard\",src:\"https://i.imgur.com/656n59P.png\",alt:\"board4\",hidden:!(4===this.props.placed.length)})),this.props.lastBidding&&a.a.createElement(\"img\",{src:\"https://i.imgur.com/y1DXfJk.png\",alt:\"Welcome to FUGU\",widt:\"30px\",heigh:\"30px\"}),a.a.createElement(\"button\",{onClick:this.props.eatOwn,hidden:!this.props.lastBidding},\" \",\"Eat Your sushis\"))}}]),t}(a.a.Component),B=n(2),w=n.n(B),v=(n(101),function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(r.a)(this,Object(c.a)(t).call(this,e))).newRound=function(e){if(console.log(\"NEW ROUND BLIR KJ\\xd8RT\"),n.state.lastBidding){n.setState({whosTurn:!0,bidding:!1,passBidding:!1,lastBidding:!1,eatingStage:!1,placed:[]});var t=Object(b.a)(n.pieces);n.sushis=t,n.bid=0,n.turn=n.props.players.indexOf(n.props.userName),n.whosBidding=null,n.passedPlayers=[]}else{console.log(\"nullstiller for ikke h\\xf8yeste budgiver\"),n.setState({whosTurn:!1,bidding:!1,passBidding:!1,lastBidding:!1,eatingStage:!1,placed:[]});var s=Object(b.a)(n.pieces);n.sushis=s,n.turn=n.props.players.indexOf(e),n.bid=0,n.whosBidding=null,n.passedPlayers=[]}},n.announceEating=function(e,t){n.props.pubnub.publish({message:{eatingStage:!0,whoEating:e,amount:t,bidding:!1},channel:n.props.gameChannel})},n.announceBidding=function(e,t,s){n.props.pubnub.publish({message:{bidding:!0,amountBidden:e,ateBy:t,lastAmount:s},channel:n.props.gameChannel})},n.annouceWinner=function(e){console.log(\"Announce winner\"),n.props.pubnub.publish({message:{success:!0,userName:n.props.userName,reset:!0},channel:n.props.gameChannel})},n.annouceFail=function(e){n.props.pubnub.publish({message:{failed:!0,userName:n.props.userName,reset:!0},channel:n.props.gameChannel})},n.myMove=function(e){n.setState({whosTurn:!n.state.whosTurn})},n.publishBidding=function(e,t){n.whosBidding=t+1===n.props.players.length?0:t+1,n.whosBidding===n.props.players.indexOf(n.props.userName)?n.state.passBidding?(n.setState({whosTurn:!n.state.whosTurn}),n.announceBidding(null,n.whosBidding,e),n.setState({whosTurn:!n.state.whosTurn})):(n.setState({whosTurn:!0}),n.makeBid(e,n.whosBidding)):console.log(\"Noen andre skal spise akkuratt n\\xe5\")},n.onMakeMove=function(e){console.log(\"We are about to make a move\"),n.setState({whosTurn:!n.state.whosTurn}),console.log(\"now this player is making a move\"+n.turn),console.log(\"the total capacity is\"+n.props.occupancy),n.turn=n.turn+1===n.props.players.length?0:n.turn+1,console.log(\" next move will be made by player \"+n.props.players[n.turn]),n.props.pubnub.publish({message:{piece:n.props.piece,turn:n.turn},channel:n.props.gameChannel}),console.log(\"We made a move\")},n.makeBid=function(e,t){if(!n.state.lastBidding){var s=parseInt(e)+1;console.log(\"The last amount you bid was\"+n.bid),w.a.fire({title:\"How many pieces do you think you can eat?\",input:\"number\",showCancelButton:!0,cancelButtonText:\"Pass\",cancelButtonColor:\"Orange\",inputAttributes:{min:s},confirmButtonText:\"Bid\",allowOutsideClick:!1}).then(function(s){s.value?(console.log(\"DU mener du kan spise \"+s.value),n.bid=s.value,n.setState({whosTurn:!n.state.whosTurn}),n.announceBidding(s.value,t)):(n.setState({passBidding:!0,bidding:!1}),console.log(\"Du har passet\"),n.setState({whosTurn:!n.state.whosTurn}),n.announceBidding(null,t,e))})}},n.showChoices=function(e){Object(m.a)(g.a.mark(function e(){var t,s,a;return g.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=new Promise(function(e){setTimeout(function(){e({true:\"Normal sushi\",false:\"Fugu sushi\",eat:\"Start bidding!\"})},1e3)}),e.next=3,w.a.fire({title:\"What sushi would you like to place?\",input:\"radio\",inputOptions:t,allowOutsideClick:!1,allowEscapeKey:!1,confirmButtonText:\"Place sushi\",inputValidator:function(e){return e?(\"true\"!==e||n.sushis.includes(!0))&&(\"false\"!==e||n.sushis.includes(!1))?void 0:\"You do not have enough of this type of sushi!\":\"You need to choose something!\"}});case 3:s=e.sent,(a=s.value)&&(\"eat\"===a?(n.whosBidding=n.turn,n.announceBidding(0),n.setState({bidding:!0}),n.makeBid(0,n.whosBidding)):(\"true\"===a&&(n.state.placed.push(!0),n.sushis.shift(),console.log(\"this is what you have placed \"+n.state.placed),console.log(\"And this is what you have left \"+n.sushis)),\"false\"===a&&(n.state.placed.push(!1),n.sushis.pop(),console.log(\"this is what you have placed\"+n.state.placed),console.log(\"And this is what you have left \"+n.props.players)),n.onMakeMove(a),console.log(n.state.placed),console.log(n.sushis)));case 6:case\"end\":return e.stop()}},e)}))()},n.sendSushi=function(e){n.props.pubnub.publish({message:{clicked:!0,sushi:n.state.placed.pop()},channel:n.props.gameChannel}),console.log(\"Sushi har blitt sendt\")},n.eatOwnSushi=function(e){for(;n.state.placed.length>0;){if(!n.state.placed.pop()){n.LoosePiece(),n.annouceFail();break}if(n.bid-=1,0===n.bid){n.annouceWinner();break}}console.log(\"Vi er ferdig meg while l\\xf8kken\"),console.log(n.bid)},n.eatSushi=function(e){console.log(\"N\\xe5 skal vi spise en sushi\"),e?e&&(n.bid-=1,console.log(\"Vi har trukket fra en sushi\"),console.log(n.bid),0===n.bid&&(console.log(\"Vi er inne i vinner iffen\"),n.annouceWinner())):(n.LoosePiece(),n.annouceFail())},n.LoosePiece=function(e){n.pieces.includes(!1)?1===Math.floor(Math.random()*n.pieces.length)?(n.pieces.pop(),console.log(\"Du mistet en fugu sushi\")):(n.pieces.shift(),console.log(\"Du mistet en vanlig sushi\")):(n.pieces.pop(),console.log(\"Du mistet en valig sushi siden du ikke har noen fuguer igjen\"))},n.state={whosTurn:n.props.myTurn,bidding:!1,passBidding:!1,lastBidding:!1,eatingStage:!1,nextRound:!1,placed:n.props.placed},n.pieces=[!0,!0,!0,!1],n.sushis=[!0,!0,!0,!1],n.turn=0,n.whosBidding=null,n.gameOver=!1,n.counter=0,n.bid=0,n.passedPlayers=[],n}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.props.pubnub.getMessage(this.props.gameChannel,function(t){e.turn=t.message.turn,e.props.players[t.message.turn]===e.props.userName?e.myMove(t.message.index,t.message.piece):t.message.bidding?(t.message.amountBidden>0?(e.publishBidding(t.message.amountBidden,t.message.ateBy),console.log(\"Player \"+t.message.ateBy+\"bid \"+t.message.amountBidden),e.publishBidding(t.message.amountBidden,t.message.ateBy)):null===t.message.amountBidden?(console.log(t.message.ateBy+\" passed\"),e.passedPlayers.includes(t.message.ateBy)||e.passedPlayers.push(t.message.ateBy),e.passedPlayers.length!==e.props.players.length-1||e.state.passBidding?e.publishBidding(t.message.lastAmount,t.message.ateBy):(console.log(\"du er den siste som er igjen\"),e.setState({lastBidding:!0}),e.announceEating(e.userName,e.bid),w.a.close())):(console.log(\"Vi er inne i elsen og denne spilleren skal begynne \\xe5 by \"+e.whosBidding),e.setState({bidding:!0})),console.log(\"LETS START BIDDING!\")):t.message.eatingStage?(w.a.close(),e.setState({eatingStage:!0,bidding:!1}),console.log(\"eating stage\")):t.message.clicked&&e.state.lastBidding?e.eatSushi(t.message.sushi):t.message.failed?w.a.fire({type:\"error\",title:\"Oops...\",text:\"The attempt failed. The atempting player will loose a random sushi.\"}).then(function(n){e.newRound(t.message.userName),console.log(\"N\\xe5 ble den trykket\")}):t.message.success?(w.a.fire({type:\"success\",title:\"Wohooo!\",confirmButtonText:\"Next Round\",text:\"The attempt was a success. The atempting player will receive one point!.\"}).then(function(n){e.newRound(t.message.userName),console.log(\"N\\xe5 ble den trykket\")}),console.log(\"The bet was successfull\")):t.message.endGame&&(w.a.close(),e.props.endGame())})}},{key:\"render\",value:function(){var e,t=this;return e=\"\".concat(this.state.whosTurn?\"Your turn\":\"Opponent's turn\"),a.a.createElement(\"div\",{className:\"game\"},!this.state.eatingStage&&a.a.createElement(\"div\",{className:\"board\"},a.a.createElement(f,{squares:this.state.squares,placed:this.state.placed}),a.a.createElement(\"div\",{id:\"functions\"},a.a.createElement(\"p\",{className:\"status-info\"},e),a.a.createElement(\"button\",{className:\"move-button\",disabled:!this.state.whosTurn,onClick:function(e){return t.showChoices()},hidden:this.state.bidding||this.state.passBidding||this.state.eatingStage},\" \",\"Make move\"))),this.state.eatingStage&&a.a.createElement(y,{squares:this.state.squares,onClick:function(e){return t.sendSushi()},placed:this.state.placed,lastBidding:this.state.lastBidding,eatOwn:function(e){return t.eatOwnSushi()}}))}}]),t}(a.a.Component)),C=n(93),k=n.n(C),E=n(94),N=n.n(E),O=(n(256),function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(r.a)(this,Object(c.a)(t).call(this,e))).onPressCreate=function(e){n.roomId=N.a.generate().substring(0,5),n.lobbyChannel=\"fugulobby--\"+n.roomId,n.pubnub.subscribe({channels:[n.lobbyChannel],withPresence:!0}),w.a.mixin({allowOutsideClick:!1,progressSteps:[\"1\",\"2\"],customClass:{heightAuto:!1,title:\"title-class\",popup:\"popup-class\",confirmButton:\"button-class\"}}).queue([{title:\"Share this room ID with your friend\",text:n.roomId},{title:\"Enter your username\",input:\"text\"}]).then(function(e){var t=JSON.stringify(e.value[1]),s=t.substring(1,t.length-1);console.log(s),n.userName=s,n.players.push(s)}),n.setState({piece:1,sushis:[!0,!0,!0,!1],isRoomCreator:!0,isDisabled:!0,myTurn:!0})},n.onPressJoin=function(e){w.a.mixin({input:\"text\",confirmButtonText:\"Next &rarr;\",showCancelButton:!0,progressSteps:[\"1\",\"2\"]}).queue([{title:\"Game Pin\",text:\"Enter the 5 characters that is unique for your game\"},{title:\"Username\",text:\"Enter the username you would like to be called \"}]).then(function(e){if(e.value){var t=JSON.stringify(e.value);w.a.fire({title:\"All done!\",html:\"\\n            Your answers:\\n            <pre><code>\".concat(t,\"</code></pre>\\n          \"),confirmButtonText:\"Lovely!\"}),n.userName=e.value[1],n.joinRoom(e.value[0],e.value[1])}})},n.getNumberInChannel=function(e){console.log(n.players)},n.joinRoom=function(e,t){n.roomId=e,n.lobbyChannel=\"fugulobby--\"+n.roomId,n.pubnub.hereNow({channels:[n.lobbyChannel]}).then(function(e){e.totalOccupancy<200?(n.pubnub.subscribe({channels:[n.lobbyChannel],withPresence:!0}),n.setState({piece:e.totalOccupancy+1,sushis:[!0,!0,!0,!1]}),console.log(\"Joined game as player \"+n.state.piece),n.pubnub.publish({message:{newPlayer:!0,userName:t},channel:n.lobbyChannel})):w.a.fire({position:\"top\",allowOutsideClick:!1,title:\"Error\",text:\"Game in progress. Try another room.\",width:275,padding:\"0.7em\",customClass:{heightAuto:!1,title:\"title-class\",popup:\"popup-class\",confirmButton:\"button-class\"}})}).catch(function(e){console.log(e)})},n.startGame=function(e){n.pubnub.publish({message:{gameStarted:!0,players:n.players},channel:n.lobbyChannel})},n.endGame=function(){n.setState({piece:\"\",isPlaying:!1,isRoomCreator:!1,isDisabled:!1,myTurn:!1}),n.lobbyChannel=null,n.gameChannel=null,n.roomId=null,n.pubnub.unsubscribe({channels:[n.lobbyChannel,n.gameChannel]})},n.pubnub=new k.a({publishKey:\"pub-c-fae6dfb9-0fd1-4b5e-a0f3-a3d4511085e9\",subscribeKey:\"sub-c-0b5e637c-3675-11eb-b6eb-96faa39b9528\"}),n.state={piece:\"\",sushis:[],placed:[],isPlaying:!1,isRoomCreator:!1,isDisabled:!1,myTurn:!1},n.lobbyChannel=null,n.gameChannel=null,n.roomId=null,n.pubnub.init(Object(d.a)(n)),n.userName=null,n.players=[],n.pieces=[!0,!0,!0,!1],n}return Object(p.a)(t,e),Object(u.a)(t,[{key:\"componentWillUnmount\",value:function(){this.pubnub.unsubscribe({channels:[this.lobbyChannel,this.gameChannel]})}},{key:\"componentDidUpdate\",value:function(){var e=this;null!=this.lobbyChannel&&this.pubnub.getMessage(this.lobbyChannel,function(t){t.message.newPlayer&&e.players.push(t.message.userName),t.message.gameStarted&&(e.gameChannel=\"fuguegame--\"+e.roomId,e.players=t.message.players,e.pubnub.subscribe({channels:[e.gameChannel]}),e.setState({isPlaying:!0}),w.a.close(),console.log(e.state.sushis))})}},{key:\"render\",value:function(){var e=this;return a.a.createElement(\"div\",{className:\"backGround-Brown\"},a.a.createElement(\"div\",{className:\"title\"},a.a.createElement(\"p\",null,\"\\xa1FUGU!\")),a.a.createElement(\"div\",{className:\"gamePin\"}),!this.state.isPlaying&&a.a.createElement(\"div\",{className:\"game\"},a.a.createElement(\"p\",null,\"Gamepin: \",this.roomId,\" \"),a.a.createElement(\"p\",null,\" Velkommen \",this.userName),a.a.createElement(\"img\",{src:\"https://i.imgur.com/y1DXfJk.png\",alt:\"Welcome to FUGU\",widt:\"30px\",heigh:\"30px\"}),a.a.createElement(\"div\",{className:\"button-container\"},a.a.createElement(\"button\",{className:\"create-button \",disabled:this.state.isDisabled,onClick:function(t){return e.onPressCreate()}},\" \",\"Create\"),a.a.createElement(\"button\",{className:\"join-button\",onClick:function(t){return e.onPressJoin()}},\" \",\"Join\"),a.a.createElement(\"button\",{className:\"start-button\",hidden:!this.state.isRoomCreator,onClick:function(t){return e.startGame()}},\" \",\"Start\"))),this.state.isPlaying&&a.a.createElement(v,{pubnub:this.pubnub,gameChannel:this.gameChannel,piece:this.state.piece,isRoomCreator:this.state.isRoomCreator,myTurn:this.state.myTurn,xUsername:this.state.xUsername,oUsername:this.state.oUsername,endGame:this.endGame,placed:this.state.placed,sushis:this.state.sushis,occupancy:this.players.length,players:this.players,userName:this.userName,pieces:this.pieces,isPlaying:this.isPlaying}))}}]),t}(s.Component));o.a.render(a.a.createElement(O,null),document.getElementById(\"root\"))},95:function(e,t,n){e.exports=n(257)}},[[95,1,2]]]);","extractedComments":[]}